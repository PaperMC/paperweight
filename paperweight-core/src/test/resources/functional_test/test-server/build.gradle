plugins {
    id "java"
    id 'io.papermc.paperweight.core'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "https://repo.papermc.io/repository/maven-public/"
    }
}

def fake = Boolean.getBoolean("fake")

dependencies {
    implementation project(":test-api")

    if (fake) {
        mache files('../mache.zip') // use fake mache for testing

        // TODO: fake mache does not have dependencies
        // this could be resolved by creating a fake maven repo that holds proper module metadata
        implementation 'com.github.oshi:oshi-core:6.6.5'
    } else {
        mache 'io.papermc:mache:1.21.4+build.4'
    }
}

paperweight {
    if (fake) {
        // use fake mojang data for testing
        minecraftVersion = 'fake'
        minecraftManifestUrl = 'file://project/../fake_mojang/version_manifest.json'

        paper {
            sourcePatchDir.set(file('../fake-patches/sources'))
            resourcePatchDir.set(file('../fake-patches/resources'))
            featurePatchDir.set(file('../fake-patches/features'))

            additionalAts.set(file('../build-data/fake.at'))
        }
    } else {
        paper {
            sourcePatchDir.set(file('patches/sources'))
            resourcePatchDir.set(file('patches/resources'))
            featurePatchDir.set(file('patches/features'))
        }
        minecraftVersion = '1.21.4'
    }
}
